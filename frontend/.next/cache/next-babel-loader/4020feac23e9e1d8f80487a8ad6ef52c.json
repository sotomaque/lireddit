{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/pages/change-password/[token].tsx\";\n\nvar __jsx = React.createElement;\nimport { Button } from '@chakra-ui/core';\nimport { Formik, Form } from 'formik';\nimport React from 'react';\nimport { InputField } from '../../components/InputField';\nimport { Wrapper } from '../../components/Wrapper';\n\nvar ChangePassword = function ChangePassword(_ref) {\n  var token = _ref.token;\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(InputField, {\n      name: \"newPassword\",\n      placeholder: \"New Password\",\n      label: \"New Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      type: \"submit\",\n      variantColor: \"teal\",\n      mt: 4,\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Change Password\"));\n  }));\n};\n\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref5) {\n  var query = _ref5.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/pages/change-password/[token].tsx"],"names":["Button","Formik","Form","React","InputField","Wrapper","ChangePassword","token","newPassword","values","setErrors","isSubmitting","getInitialProps","query"],"mappings":";;;;;;;AAAA,SAAcA,MAAd,QAA4B,iBAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAKA,IAAMC,cAA2C,GAAG,SAA9CA,cAA8C,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC/D,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADjB;AAEE,IAAA,QAAQ;AAAA,2EAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,SAAjB,SAAiBA,SAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,CADD;AAAA,GAXH,CADA,CADF;AAoCH,CArCD;;KAAML,c;;AAuCNA,cAAc,CAACM,eAAf,GAAiC,iBAAa;AAAA,MAAXC,KAAW,SAAXA,KAAW;AAC5C,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/core';\nimport { Formik, Form } from 'formik';\nimport { NextPage } from 'next'\nimport React from 'react';\nimport { InputField } from '../../components/InputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport login from '../login';\n\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n    return (\n      <Wrapper variant='small'>\n      <Formik\n        initialValues={{ newPassword: '' }}\n        onSubmit={ async (values, { setErrors }) => {\n          // const response = await login(values);\n          // if (response.data?.login.errors) {\n          //   setErrors(toErrorMap(response.data.login.errors));\n          // } else if (response.data?.login.user) {\n          //   router.push('/');\n          // }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              placeholder=\"New Password\"\n              label=\"New Password\"\n              type='password'\n            />\n            \n\n            <Button \n              type='submit'\n              variantColor='teal'\n              mt={4}\n              isLoading={isSubmitting}\n            >\n              Change Password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n    )\n}\n\nChangePassword.getInitialProps = ({query}) => {\n  return {\n    token: query.token as string\n  }\n}\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}