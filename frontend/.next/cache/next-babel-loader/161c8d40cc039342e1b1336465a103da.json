{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useField } from 'formik';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/core';\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/components/InputField.tsx"],"names":["React","useField","FormControl","FormErrorMessage","FormLabel","Input","InputField","label","_","size","props","field","error","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,iBAAhE;AAOA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAIhD;AAAA;;AAAA,MAHHC,KAGG,QAHHA,KAGG;AAAA,MAFGC,CAEH,QAFHC,IAEG;AAAA,MADAC,KACA;;AAAA,kBACwBT,QAAQ,CAACS,KAAD,CADhC;AAAA;AAAA,MACIC,KADJ;AAAA,MACaC,KADb,iBACaA,KADb;;AAEH,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,KAAjC,CADF,EAEE,MAAC,KAAD,eAAWI,KAAX,EAAsBD,KAAtB;AAA6B,IAAA,EAAE,EAAEC,KAAK,CAACE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGD,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH1D,CADF;AAOD,CAbM;;GAAMN,U;UAKgBL,Q;;;KALhBK,U","sourcesContent":["import React, { InputHTMLAttributes } from 'react'\nimport { useField } from 'formik';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/core';\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n };\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  label,\n  size: _,\n  ...props }\n) => {\n  const [field, { error }] = useField(props);\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\n      <Input {...field} {...props} id={field.name} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null }\n    </FormControl>\n  );\n}"]},"metadata":{},"sourceType":"module"}