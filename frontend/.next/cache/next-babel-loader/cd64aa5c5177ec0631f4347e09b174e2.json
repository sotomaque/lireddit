{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core';\nimport { Provider, createClient } from 'urql';\nimport theme from '../theme';\nvar client = createClient({\n  url: 'http://localhost:4000/graphql'\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })))));\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/pages/_app.tsx"],"names":["ThemeProvider","CSSReset","ColorModeProvider","Provider","createClient","theme","client","url","MyApp","Component","pageProps"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,iBAAlC,QAA2D,iBAA3D;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,MAAvC;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AAAEG,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA3B;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADF,CADF;AAUD;;KAXQF,K;AAaT,eAAeA,KAAf","sourcesContent":["import { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core'\nimport { Provider, createClient } from 'urql';\n\nimport theme from '../theme'\n\nconst client = createClient({ url: 'http://localhost:4000/graphql' });\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Provider value={client}>\n      <ThemeProvider theme={theme}>\n        <ColorModeProvider>\n          <CSSReset />\n          <Component {...pageProps} />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}