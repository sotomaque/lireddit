{"ast":null,"code":"var _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/components/NavBar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nexport const NavBar = ({}) => {\n  const [{\n    fetching: logoutFetching\n  }, logout] = useLogoutMutation();\n  const [{\n    data,\n    fetching\n  }] = useMeQuery({\n    pause: isServer()\n  });\n  let body = null; // data is loading\n\n  if (fetching) {\n    body = null;\n  } // user not logged in \n  else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n      body = __jsx(React.Fragment, null, __jsx(NextLink, {\n        href: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        mr: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Login\")), __jsx(NextLink, {\n        href: \"/register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        ml: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"Register\")));\n    } // user logged in\n    else {\n        body = __jsx(Flex, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }\n        }, __jsx(Box, {\n          mr: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        }, data.me.username), __jsx(Button, {\n          ml: 4,\n          onClick: () => {\n            logout();\n          },\n          isLoading: logoutFetching,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }, \"Logout\"));\n      }\n\n  return __jsx(Flex, {\n    bg: \"tomato\",\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    marginLeft: 'auto',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, body));\n};","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/components/NavBar.tsx"],"names":["React","Box","Button","Flex","Link","NextLink","useLogoutMutation","useMeQuery","isServer","NavBar","fetching","logoutFetching","logout","data","pause","body","me","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAMA,OAAO,MAAMC,MAA6B,GAAG,CAAC,EAAD,KAAQ;AAEnD,QAAM,CAAC;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GAAD,EAA+BC,MAA/B,IAAyCN,iBAAiB,EAAhE;AACA,QAAM,CAAC;AAAEO,IAAAA,IAAF;AAAQH,IAAAA;AAAR,GAAD,IAAuBH,UAAU,CAAC;AACtCO,IAAAA,KAAK,EAAEN,QAAQ;AADuB,GAAD,CAAvC;AAIA,MAAIO,IAAI,GAAG,IAAX,CAPmD,CASnD;;AACA,MAAIL,QAAJ,EAAc;AACZK,IAAAA,IAAI,GAAG,IAAP;AACD,GAFD,CAGA;AAHA,OAIK,IAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,CAAJ,EAAe;AAClBD,MAAAA,IAAI,GACF,4BACE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAKE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CALF,CADF;AAWD,KAZI,CAaL;AAbK,SAcA;AACHA,QAAAA,IAAI,GACF,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,IAAI,CAACG,EAAL,CAAQC,QAArB,CADF,EAEE,MAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,MAAM;AACP,WAJH;AAKE,UAAA,SAAS,EAAED,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAcD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,CAAC,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,UAAU,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,IADJ,CADF,CADF;AAOD,CApDM","sourcesContent":["import React from 'react'\nimport { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport NextLink from 'next/link'\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\n\ninterface NavBarProps {\n\n}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    pause: isServer(),\n  });\n\n  let body = null\n\n  // data is loading\n  if (fetching) {\n    body = null\n  } \n  // user not logged in \n  else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={4}>Login</Link>\n        </NextLink>\n        \n        <NextLink href='/register'>\n          <Link ml={4}>Register</Link>\n        </NextLink>\n      </>\n    )\n  }\n  // user logged in\n  else {\n    body = (\n      <Flex>\n        <Box mr={4}>{data.me.username}</Box>\n        <Button \n          ml={4} \n          onClick={() => {\n            logout();\n          }}\n          isLoading={logoutFetching}\n        >\n            Logout  \n        </Button>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex bg=\"tomato\" p={4}>\n      <Box marginLeft={'auto'}>\n        { body }\n      </Box>\n    </Flex>\n  );\n}"]},"metadata":{},"sourceType":"module"}