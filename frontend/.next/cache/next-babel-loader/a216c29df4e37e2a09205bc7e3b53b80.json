{"ast":null,"code":"var _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        router.push('/');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"usernameOrEmail\",\n    placeholder: \"username or email\",\n    label: \"Username or Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"password\",\n    placeholder: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: \"submit\",\n    variantColor: \"teal\",\n    mt: 4,\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n};\n\nexport default withUrqlClient(createUrqlClient)(Login);","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/pages/login.tsx"],"names":["React","Form","Formik","Box","Button","Wrapper","InputField","useLoginMutation","toErrorMap","useRouter","withUrqlClient","createUrqlClient","Login","router","login","username","password","values","setErrors","response","data","errors","user","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,KAAmB,GAAG,CAAC,EAAD,KAAQ;AAClC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM,GAAGK,KAAH,IAAYP,gBAAgB,EAAlC;AAEA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAG,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AAC1C,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeN,KAAf,CAAqBO,MAAzB,EAAiC;AAC/BH,QAAAA,SAAS,CAACV,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcN,KAAd,CAAoBO,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeN,KAAf,CAAqBQ,IAAzB,EAA+B;AACpCT,QAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAeE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF,CAZJ,CADF,CADF;AA0CD,CA9CD;;AAgDA,eAAed,cAAc,CAACC,gBAAD,CAAd,CAAiCC,KAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Form, Formik } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst Login: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n\n  return (\n    <Wrapper variant='small'>\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={ async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            router.push('/');\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              placeholder=\"username or email\"\n              label=\"Username or Email\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n\n            <Button \n              type='submit'\n              variantColor='teal'\n              mt={4}\n              isLoading={isSubmitting}\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n}\n\nexport default withUrqlClient(createUrqlClient)(Login);"]},"metadata":{},"sourceType":"module"}