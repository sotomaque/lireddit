{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    query Posts {\\n  posts {\\n    id\\n    createdAt\\n    updatedAt\\n    title\\n  }\\n}\\n    \"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    query Me {\\n  me {\\n    ...RegularUser\\n  }\\n}\\n    \", \"\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation Register($options: UsernamePasswordInput!) {\\n  register(options: $options) {\\n    ...RegularUserResponse\\n  }\\n}\\n    \", \"\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation Logout {\\n  logout\\n}\\n    \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation Login($usernameOrEmail: String!, $password: String!) {\\n  login(usernameOrEmail: $usernameOrEmail, password: $password) {\\n    ...RegularUserResponse\\n  }\\n}\\n    \", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation ChangePassword($token: String!, $newPassword: String!) {\\n  changePassword(token: $token, newPassword: $newPassword) {\\n    ...RegularUserResponse\\n  }\\n}\\n    \", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment RegularUserResponse on UserResponse {\\n  user {\\n    ...RegularUser\\n  }\\n  errors {\\n    ...RegularError\\n  }\\n}\\n    \", \"\\n\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment RegularError on FieldError {\\n  field\\n  message\\n}\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment RegularUser on User {\\n  id\\n  username\\n}\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport var RegularUserFragmentDoc = gql(_templateObject());\nexport var RegularErrorFragmentDoc = gql(_templateObject2());\nexport var RegularUserResponseFragmentDoc = gql(_templateObject3(), RegularUserFragmentDoc, RegularErrorFragmentDoc);\nexport var ChangePasswordDocument = gql(_templateObject4(), RegularUserResponseFragmentDoc);\nexport function useChangePasswordMutation() {\n  _s();\n\n  return Urql.useMutation(ChangePasswordDocument);\n}\n\n_s(useChangePasswordMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [Urql.useMutation];\n});\n\n;\nexport var LoginDocument = gql(_templateObject5(), RegularUserResponseFragmentDoc);\nexport function useLoginMutation() {\n  _s2();\n\n  return Urql.useMutation(LoginDocument);\n}\n\n_s2(useLoginMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [Urql.useMutation];\n});\n\n;\nexport var LogoutDocument = gql(_templateObject6());\nexport function useLogoutMutation() {\n  _s3();\n\n  return Urql.useMutation(LogoutDocument);\n}\n\n_s3(useLogoutMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [Urql.useMutation];\n});\n\n;\nexport var RegisterDocument = gql(_templateObject7(), RegularUserResponseFragmentDoc);\nexport function useRegisterMutation() {\n  _s4();\n\n  return Urql.useMutation(RegisterDocument);\n}\n\n_s4(useRegisterMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [Urql.useMutation];\n});\n\n;\nexport var MeDocument = gql(_templateObject8(), RegularUserFragmentDoc);\nexport function useMeQuery() {\n  _s5();\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Urql.useQuery(_objectSpread({\n    query: MeDocument\n  }, options));\n}\n\n_s5(useMeQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [Urql.useQuery];\n});\n\n;\nexport var PostsDocument = gql(_templateObject9());\nexport function usePostsQuery() {\n  _s6();\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Urql.useQuery(_objectSpread({\n    query: PostsDocument\n  }, options));\n}\n\n_s6(usePostsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [Urql.useQuery];\n});\n\n;","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/generated/graphql.tsx"],"names":["gql","Urql","RegularUserFragmentDoc","RegularErrorFragmentDoc","RegularUserResponseFragmentDoc","ChangePasswordDocument","useChangePasswordMutation","useMutation","LoginDocument","useLoginMutation","LogoutDocument","useLogoutMutation","RegisterDocument","useRegisterMutation","MeDocument","useMeQuery","options","useQuery","query","PostsDocument","usePostsQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AA2MA,OAAO,IAAMC,sBAAsB,GAAGF,GAAH,mBAA5B;AAMP,OAAO,IAAMG,uBAAuB,GAAGH,GAAH,oBAA7B;AAMP,OAAO,IAAMI,8BAA8B,GAAGJ,GAAH,qBASrCE,sBATqC,EAUzCC,uBAVyC,CAApC;AAWP,OAAO,IAAME,sBAAsB,GAAGL,GAAH,qBAM7BI,8BAN6B,CAA5B;AAQP,OAAO,SAASE,yBAAT,GAAqC;AAAA;;AAC1C,SAAOL,IAAI,CAACM,WAAL,CAA0EF,sBAA1E,CAAP;AACD;;GAFeC,yB;UACPL,IAAI,CAACM,W;;;AACb;AACD,OAAO,IAAMC,aAAa,GAAGR,GAAH,qBAMpBI,8BANoB,CAAnB;AAQP,OAAO,SAASK,gBAAT,GAA4B;AAAA;;AACjC,SAAOR,IAAI,CAACM,WAAL,CAAwDC,aAAxD,CAAP;AACD;;IAFeC,gB;UACPR,IAAI,CAACM,W;;;AACb;AACD,OAAO,IAAMG,cAAc,GAAGV,GAAH,oBAApB;AAMP,OAAO,SAASW,iBAAT,GAA6B;AAAA;;AAClC,SAAOV,IAAI,CAACM,WAAL,CAA0DG,cAA1D,CAAP;AACD;;IAFeC,iB;UACPV,IAAI,CAACM,W;;;AACb;AACD,OAAO,IAAMK,gBAAgB,GAAGZ,GAAH,qBAMvBI,8BANuB,CAAtB;AAQP,OAAO,SAASS,mBAAT,GAA+B;AAAA;;AACpC,SAAOZ,IAAI,CAACM,WAAL,CAA8DK,gBAA9D,CAAP;AACD;;IAFeC,mB;UACPZ,IAAI,CAACM,W;;;AACb;AACD,OAAO,IAAMO,UAAU,GAAGd,GAAH,qBAMjBE,sBANiB,CAAhB;AAQP,OAAO,SAASa,UAAT,GAAsF;AAAA;;AAAA,MAAlEC,OAAkE,uEAAJ,EAAI;AAC3F,SAAOf,IAAI,CAACgB,QAAL;AAAyBC,IAAAA,KAAK,EAAEJ;AAAhC,KAA+CE,OAA/C,EAAP;AACD;;IAFeD,U;UACPd,IAAI,CAACgB,Q;;;AACb;AACD,OAAO,IAAME,aAAa,GAAGnB,GAAH,oBAAnB;AAWP,OAAO,SAASoB,aAAT,GAA4F;AAAA;;AAAA,MAArEJ,OAAqE,uEAAJ,EAAI;AACjG,SAAOf,IAAI,CAACgB,QAAL;AAA4BC,IAAAA,KAAK,EAAEC;AAAnC,KAAqDH,OAArD,EAAP;AACD;;IAFeI,a;UACPnB,IAAI,CAACgB,Q;;;AACb","sourcesContent":["import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  hello: Scalars['String'];\n  posts: Array<Post>;\n  post?: Maybe<Post>;\n  me?: Maybe<User>;\n};\n\n\nexport type QueryPostArgs = {\n  id: Scalars['Float'];\n};\n\nexport type Post = {\n  __typename?: 'Post';\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  title: Scalars['String'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  email: Scalars['String'];\n  username: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createPost: Post;\n  updatePost?: Maybe<Post>;\n  deletePost: Scalars['Boolean'];\n  register: UserResponse;\n  login: UserResponse;\n  logout: Scalars['Boolean'];\n  forgotPassword: Scalars['Boolean'];\n  changePassword: UserResponse;\n};\n\n\nexport type MutationCreatePostArgs = {\n  title: Scalars['String'];\n};\n\n\nexport type MutationUpdatePostArgs = {\n  title: Scalars['String'];\n  id: Scalars['Float'];\n};\n\n\nexport type MutationDeletePostArgs = {\n  id: Scalars['Float'];\n};\n\n\nexport type MutationRegisterArgs = {\n  options: UsernamePasswordInput;\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  usernameOrEmail: Scalars['String'];\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationChangePasswordArgs = {\n  newPassword: Scalars['String'];\n  token: Scalars['String'];\n};\n\nexport type UserResponse = {\n  __typename?: 'UserResponse';\n  errors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type UsernamePasswordInput = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\nexport type RegularErrorFragment = (\n  { __typename?: 'FieldError' }\n  & Pick<FieldError, 'field' | 'message'>\n);\n\nexport type RegularUserFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'id' | 'username'>\n);\n\nexport type RegularUserResponseFragment = (\n  { __typename?: 'UserResponse' }\n  & { user?: Maybe<(\n    { __typename?: 'User' }\n    & RegularUserFragment\n  )>, errors?: Maybe<Array<(\n    { __typename?: 'FieldError' }\n    & RegularErrorFragment\n  )>> }\n);\n\nexport type ChangePasswordMutationVariables = Exact<{\n  token: Scalars['String'];\n  newPassword: Scalars['String'];\n}>;\n\n\nexport type ChangePasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { changePassword: (\n    { __typename?: 'UserResponse' }\n    & RegularUserResponseFragment\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  usernameOrEmail: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'UserResponse' }\n    & RegularUserResponseFragment\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type RegisterMutationVariables = Exact<{\n  options: UsernamePasswordInput;\n}>;\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & { register: (\n    { __typename?: 'UserResponse' }\n    & RegularUserResponseFragment\n  ) }\n);\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & RegularUserFragment\n  )> }\n);\n\nexport type PostsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type PostsQuery = (\n  { __typename?: 'Query' }\n  & { posts: Array<(\n    { __typename?: 'Post' }\n    & Pick<Post, 'id' | 'createdAt' | 'updatedAt' | 'title'>\n  )> }\n);\n\nexport const RegularUserFragmentDoc = gql`\n    fragment RegularUser on User {\n  id\n  username\n}\n    `;\nexport const RegularErrorFragmentDoc = gql`\n    fragment RegularError on FieldError {\n  field\n  message\n}\n    `;\nexport const RegularUserResponseFragmentDoc = gql`\n    fragment RegularUserResponse on UserResponse {\n  user {\n    ...RegularUser\n  }\n  errors {\n    ...RegularError\n  }\n}\n    ${RegularUserFragmentDoc}\n${RegularErrorFragmentDoc}`;\nexport const ChangePasswordDocument = gql`\n    mutation ChangePassword($token: String!, $newPassword: String!) {\n  changePassword(token: $token, newPassword: $newPassword) {\n    ...RegularUserResponse\n  }\n}\n    ${RegularUserResponseFragmentDoc}`;\n\nexport function useChangePasswordMutation() {\n  return Urql.useMutation<ChangePasswordMutation, ChangePasswordMutationVariables>(ChangePasswordDocument);\n};\nexport const LoginDocument = gql`\n    mutation Login($usernameOrEmail: String!, $password: String!) {\n  login(usernameOrEmail: $usernameOrEmail, password: $password) {\n    ...RegularUserResponse\n  }\n}\n    ${RegularUserResponseFragmentDoc}`;\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const RegisterDocument = gql`\n    mutation Register($options: UsernamePasswordInput!) {\n  register(options: $options) {\n    ...RegularUserResponse\n  }\n}\n    ${RegularUserResponseFragmentDoc}`;\n\nexport function useRegisterMutation() {\n  return Urql.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument);\n};\nexport const MeDocument = gql`\n    query Me {\n  me {\n    ...RegularUser\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useMeQuery(options: Omit<Urql.UseQueryArgs<MeQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MeQuery>({ query: MeDocument, ...options });\n};\nexport const PostsDocument = gql`\n    query Posts {\n  posts {\n    id\n    createdAt\n    updatedAt\n    title\n  }\n}\n    `;\n\nexport function usePostsQuery(options: Omit<Urql.UseQueryArgs<PostsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<PostsQuery>({ query: PostsDocument, ...options });\n};"]},"metadata":{},"sourceType":"module"}