{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/enrique/dev/lireddit/lireddit-web/src/components/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery } from '../generated/graphql';\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null; // data is loading\n\n  if (fetching) {\n    body = null;\n  } // user not logged in \n  else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n      body = __jsx(React.Fragment, null, __jsx(NextLink, {\n        href: \"/login\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        mr: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, \"Login\")), __jsx(NextLink, {\n        href: \"/register\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        ml: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Register\")));\n    } // user logged in\n    else {\n        body = __jsx(Flex, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }\n        }, __jsx(Box, {\n          m: 4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        }, data.me.username), __jsx(Button, {\n          ml: 4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, \"Logout\"));\n      }\n\n  return __jsx(Flex, {\n    bg: \"tomato\",\n    p: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    marginLeft: 'auto',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, body));\n};\n\n_s(NavBar, \"8DQvut1eX6vBh4GVSiANs/7NvU8=\", false, function () {\n  return [useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/enrique/dev/lireddit/lireddit-web/src/components/NavBar.tsx"],"names":["React","Box","Button","Flex","Link","NextLink","useMeQuery","NavBar","data","fetching","body","me","username"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAMA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,oBAEtBD,UAAU,EAFY;AAAA;AAAA;AAAA,MAE1CE,IAF0C,iBAE1CA,IAF0C;AAAA,MAEpCC,QAFoC,iBAEpCA,QAFoC;;AAInD,MAAIC,IAAI,GAAG,IAAX,CAJmD,CAMnD;;AACA,MAAID,QAAJ,EAAc;AACZC,IAAAA,IAAI,GAAG,IAAP;AACD,GAFD,CAGA;AAHA,OAIK,IAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,CAAJ,EAAe;AAClBD,MAAAA,IAAI,GACF,4BACE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAKE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CALF,CADF;AAWD,KAZI,CAaL;AAbK,SAcA;AACHA,QAAAA,IAAI,GACF,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYF,IAAI,CAACG,EAAL,CAAQC,QAApB,CADF,EAEE,MAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,CAAC,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,UAAU,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,IADJ,CADF,CADF;AAOD,CAzCM;;GAAMH,M;UAEkBD,U;;;KAFlBC,M","sourcesContent":["import React from 'react'\nimport { Box, Button, Flex, Link } from '@chakra-ui/core';\nimport NextLink from 'next/link'\nimport { useMeQuery } from '../generated/graphql';\n\ninterface NavBarProps {\n\n}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n\n  const [{ data, fetching }] = useMeQuery();\n\n  let body = null\n\n  // data is loading\n  if (fetching) {\n    body = null\n  } \n  // user not logged in \n  else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={4}>Login</Link>\n        </NextLink>\n        \n        <NextLink href='/register'>\n          <Link ml={4}>Register</Link>\n        </NextLink>\n      </>\n    )\n  }\n  // user logged in\n  else {\n    body = (\n      <Flex>\n        <Box m={4}>{data.me.username}</Box>\n        <Button ml={4}>Logout</Button>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex bg=\"tomato\" p={4}>\n      <Box marginLeft={'auto'}>\n        { body }\n      </Box>\n    </Flex>\n  );\n}"]},"metadata":{},"sourceType":"module"}